// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TripProject.Models;

#nullable disable

namespace TripProject.Migrations
{
    [DbContext(typeof(TripsContext))]
    partial class TripsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TripProject.Models.TbCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TbCategory", (string)null);
                });

            modelBuilder.Entity("TripProject.Models.TbCity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CityName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CounturyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CounturyId");

                    b.ToTable("TbCity", (string)null);
                });

            modelBuilder.Entity("TripProject.Models.TbCountry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CounturyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TbCountry", (string)null);
                });

            modelBuilder.Entity("TripProject.Models.TbRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("TbRequest", (string)null);
                });

            modelBuilder.Entity("TripProject.Models.TbTrip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BestSellerRequest")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Image")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CityId");

                    b.ToTable("TbTrip", (string)null);
                });

            modelBuilder.Entity("TripProject.Models.VwTrip", b =>
                {
                    b.Property<int?>("BestSellerRequest")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("CityName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CounturyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.ToTable((string)null);

                    b.ToView("vwTrip", (string)null);
                });

            modelBuilder.Entity("TripProject.Models.TbCity", b =>
                {
                    b.HasOne("TripProject.Models.TbCountry", "Countury")
                        .WithMany("TbCities")
                        .HasForeignKey("CounturyId")
                        .HasConstraintName("FK_TbCity_TbCountry");

                    b.Navigation("Countury");
                });

            modelBuilder.Entity("TripProject.Models.TbRequest", b =>
                {
                    b.HasOne("TripProject.Models.TbTrip", "TbTrips")
                        .WithMany("TbRequests")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK_TbRequest_TbTrip");

                    b.Navigation("TbTrips");
                });

            modelBuilder.Entity("TripProject.Models.TbTrip", b =>
                {
                    b.HasOne("TripProject.Models.TbCategory", "Category")
                        .WithMany("TbTrips")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_TbTrip_TbCategory");

                    b.HasOne("TripProject.Models.TbCity", "City")
                        .WithMany("TbTrips")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_TbTrip_TbCity");

                    b.Navigation("Category");

                    b.Navigation("City");
                });

            modelBuilder.Entity("TripProject.Models.TbCategory", b =>
                {
                    b.Navigation("TbTrips");
                });

            modelBuilder.Entity("TripProject.Models.TbCity", b =>
                {
                    b.Navigation("TbTrips");
                });

            modelBuilder.Entity("TripProject.Models.TbCountry", b =>
                {
                    b.Navigation("TbCities");
                });

            modelBuilder.Entity("TripProject.Models.TbTrip", b =>
                {
                    b.Navigation("TbRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
